<application>
  <component name="PostfixTemplatesSettings">
    <option name="providerToDisabledTemplates">
      <disabled-templates provider="builtin.java">
        <value>
          <set>
            <option value="arg" />
            <option value="assert" />
            <option value="com.intellij.codeInsight.template.postfix.templates.CastExpressionPostfixTemplate#.cast" />
            <option value="com.intellij.codeInsight.template.postfix.templates.CastVarPostfixTemplate#.castvar" />
            <option value="com.intellij.codeInsight.template.postfix.templates.ElseStatementPostfixTemplate#.else" />
            <option value="com.intellij.codeInsight.template.postfix.templates.IfStatementPostfixTemplate#.if" />
            <option value="com.intellij.codeInsight.template.postfix.templates.InstanceofExpressionPostfixTemplate#.inst" />
            <option value="com.intellij.codeInsight.template.postfix.templates.InstanceofExpressionPostfixTemplate#.instanceof" />
            <option value="com.intellij.codeInsight.template.postfix.templates.IntroduceFieldPostfixTemplate#.field" />
            <option value="com.intellij.codeInsight.template.postfix.templates.IntroduceVariablePostfixTemplate#.var" />
            <option value="com.intellij.codeInsight.template.postfix.templates.IsNullCheckPostfixTemplate#.null" />
            <option value="com.intellij.codeInsight.template.postfix.templates.NewExpressionPostfixTemplate#.new" />
            <option value="com.intellij.codeInsight.template.postfix.templates.NotExpressionPostfixTemplate#!" />
            <option value="com.intellij.codeInsight.template.postfix.templates.NotExpressionPostfixTemplate#.not" />
            <option value="com.intellij.codeInsight.template.postfix.templates.NotNullCheckPostfixTemplate#.nn" />
            <option value="com.intellij.codeInsight.template.postfix.templates.NotNullCheckPostfixTemplate#.notnull" />
            <option value="com.intellij.codeInsight.template.postfix.templates.ParenthesizedExpressionPostfixTemplate#.par" />
            <option value="com.intellij.codeInsight.template.postfix.templates.StreamPostfixTemplate#.stream" />
            <option value="com.intellij.codeInsight.template.postfix.templates.SwitchStatementPostfixTemplate#.switch" />
            <option value="com.intellij.codeInsight.template.postfix.templates.TryStatementPostfixTemplate#.try" />
            <option value="com.intellij.codeInsight.template.postfix.templates.TryWithResourcesPostfixTemplate#.twr" />
            <option value="for" />
            <option value="fori" />
            <option value="format" />
            <option value="forr" />
            <option value="iter" />
            <option value="lambda" />
            <option value="opt" />
            <option value="reqnonnull" />
            <option value="return" />
            <option value="serr" />
            <option value="souf" />
            <option value="sout" />
            <option value="soutv" />
            <option value="synchronized" />
            <option value="throw" />
            <option value="while" />
          </set>
        </value>
      </disabled-templates>
      <disabled-templates provider="org.jetbrains.kotlin.idea.codeInsight.postfix.KtPostfixTemplateProvider">
        <value>
          <set>
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtArgumentPostfixTemplate#.arg" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtAssertPostfixTemplate#.assert" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtElseExpressionPostfixTemplate#.else" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtForEachPostfixTemplate#.for" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtForEachPostfixTemplate#.iter" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtIfExpressionPostfixTemplate#.if" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtIntroduceVariablePostfixTemplate#.val" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtIntroduceVariablePostfixTemplate#.var" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtIsNullPostfixTemplate#.null" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtNotNullPostfixTemplate#.nn" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtNotNullPostfixTemplate#.notnull" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtNotPostfixTemplate#.not" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtParenthesizedPostfixTemplate#.par" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtReturnPostfixTemplate#.return" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtSoutPostfixTemplate#.sout" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtSpreadPostfixTemplate#.spread" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtTryPostfixTemplate#.try" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtWhenExpressionPostfixTemplate#.when" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtWhilePostfixTemplate#.while" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtWrapWithArrayOfPostfixTemplate#.arrayOf" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtWrapWithListOfPostfixTemplate#.listOf" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtWrapWithSequenceOfPostfixTemplate#.sequenceOf" />
            <option value="org.jetbrains.kotlin.idea.codeInsight.postfix.KtWrapWithSetOfPostfixTemplate#.setOf" />
          </set>
        </value>
      </disabled-templates>
    </option>
  </component>
</application>